// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // which ram8 are we selecting
    DMux8Way(in= load, sel= address[3..5], a= s1, b= s2, c= s3, d= s4, e= s5, f= s6, g= s7, h= s8);

    // select proper register from ram8
    RAM8(in= in, load= s1, address= address[0..2], out= r1);
    RAM8(in= in, load= s2, address= address[0..2], out= r2);
    RAM8(in= in, load= s3, address= address[0..2], out= r3);
    RAM8(in= in, load= s4, address= address[0..2], out= r4);
    RAM8(in= in, load= s5, address= address[0..2], out= r5);
    RAM8(in= in, load= s6, address= address[0..2], out= r6);
    RAM8(in= in, load= s7, address= address[0..2], out= r7);
    RAM8(in= in, load= s8, address= address[0..2], out= r8);

    // which ram8s register are we selecting?
    Mux8Way16(a= r1, b= r2, c= r3, d= r4, e= r5, f= r6, g= r7, h= r8, sel= address[3..5], out= out);
}